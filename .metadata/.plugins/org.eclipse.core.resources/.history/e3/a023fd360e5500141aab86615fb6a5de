package com.example.db;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;

public class UsersDB extends DBHelper{
	
	private static final String DB_NAME = "PhotoWorld";
	private static final int DB_VERSION = 1;
	
	public UsersDB(SQLiteDatabase db, Context context, String name, CursorFactory factory,
			int version) {
		super(context, DB_NAME, null, DB_VERSION);
		
		this.db = db;
	}

	private SQLiteDatabase db;
	private static final String TABLE_NAME = "Users";

	

	public void registerUser(String username, String password, String confirmPassword) throws Exception {
		
		username = username.trim();
		
		if (password != confirmPassword) {
			throw new Exception("Passsword and Confirm Password do not match!");
		}
		if (Character.isDigit(username.charAt(0))) {
			throw new Exception("Username cannot start with digit!");
		}
		if (!Character.isLetter(username.charAt(0))) {
			throw new Exception(
					"The first symbol of username must be a letter!");
		}
		if (username.length() < 3) {
			throw new Exception(
					"Username must be at least 3 symbols long!");
		}
		if (password.length() < 3) {
			throw new Exception(
					"Password must be at least 6 symbols long!");
		}
		for (int i = 1; i < username.length(); i++) {
			if (!Character.isLetter(username.charAt(i)) || !Character.isDigit(username.charAt(i))
					|| username.charAt(i) != '_' || username.charAt(i) != '-') {
				throw new Exception(
						"Username must contains only digits, letters or \"_\" or \"-\"!");
			}
		}

		ContentValues user = new ContentValues();
		user.put("username", username);
		user.put("password", password);
		db.insert(TABLE_NAME, null, user);
		db.close();
	}


	public boolean loginUser(String username, String password) {
		Cursor userCursor = null;
		
		if (username != null && password != null) {
			String sql = "SELECT * FROM " + TABLE_NAME + " WHERE username='" + username
			        + "' " + "AND password ='" + password + "'";
			
			userCursor = db.rawQuery(sql, null);
			boolean isLoggedIn = userCursor.moveToFirst();
			if (isLoggedIn) {
				// my user exist in the database record
				userCursor.close();
				return true;
			}
			
		}
		if (userCursor != null)
			userCursor.close();
		return false;
	}
	
	public Cursor getFeedsCursor() {
		return db.query(TABLE_NAME, new String[] { "_id", "feed_url" }, null,
				null, null, null, null);
	}

	public void deleteFeed(long ID) {
		db.delete(TABLE_NAME, "_id=?", new String[] { String.valueOf(ID) });
	}
}